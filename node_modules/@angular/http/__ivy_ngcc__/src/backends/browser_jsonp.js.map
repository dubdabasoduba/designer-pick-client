{"version":3,"file":"browser_jsonp.js","sources":["../../../../../modules/@angular/http/src/backends/browser_jsonp.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,OACO,EAAC,UAAU,EAAC,MAAM,eAAe;;AAExC,IAAI,cAAc,GAAG,CAAC,CAAC;AACvB,OAAO,IAAM,UAAU,GAAG,cAAc,CAAC;AACzC,IAAI,iBAAiB,GAAyB,IAAI,CAAC;AAEnD;AAAkC,IAChC,IAAM,CAAC,GAAyB,OAAO,MAAM,IAAI,QAAQ,GAAG,MAAM,GAAG,EAAE,CAAC;AAC1E,IAAE,EAAE,CAAC,CAAC,iBAAiB,KAAK,IAAI,CAAC,CAAC,CAAC;AACnC,QAAI,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;AAC3C,IAAE,CAAC;AACH,IAAE,MAAM,CAAC,iBAAiB,CAAC;AAC3B,CAAC;AAED,+DAA+D;AAE/D;AACa,IADb;AAA0B,IAqC1B,CAAC;AACD,IArCE,sDAAsD;AACxD,IAAE,4BAAK,GAAL,UAAM,GAAW;AAAI,QACnB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAClD,QAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,QAAI,MAAM,CAAC,IAAI,CAAC;AAChB,IAAE,CAAC;AAEH,IAAE,oCAAa,GAAb,cAA0B,MAAM,CAAC,UAAQ,cAAc,EAAI,CAAC,CAAC,CAAC;AAEhE,IAAE,sCAAe,GAAf,UAAgB,EAAU,IAAY,MAAM,CAAI,UAAU,SAAI,EAAE,cAAW,CAAC,CAAC,CAAC;AAEhF,IAAE,uCAAgB,GAAhB,UAAiB,EAAU,EAAE,UAAe;AAC9C,QAAI,IAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;AAC/C,QAAI,WAAW,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;AACjC,IAAE,CAAC;AAEH,IAAE,uCAAgB,GAAhB,UAAiB,EAAU;AAC7B,QAAI,IAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;AAC/C,QAAI,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AAC3B,IAAE,CAAC;AAEH,IAAE,yCAAyC;AAC3C,IAAE,2BAAI,GAAJ,UAAK,IAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAE9D,IAAE,uCAAuC;AACzC,IAAE,8BAAO,GAAP,UAAQ,IAAS;AACnB,QAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1B,YAAM,IAAI,CAAC,UAAU,CAAC,WAAW,CAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAChD,QAAI,CAAC;AACL,IAAE,CAAC,CAGD;IAFK,JAGP,IAAA,kBAAkB;IAHD,GAA0B,UAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,rCAGpB,IAAO,2BAAc,GAA6D,EACjF;MAHA;;;;gDAGC;AACF,IAAA,mBAAC;AAAD,CAAC,AArCD,IAqCC;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nlet _nextRequestId = 0;\nexport const JSONP_HOME = '__ng_jsonp__';\nlet _jsonpConnections: {[key: string]: any} = null;\n\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\n\n// Make sure not to evaluate this in a non-browser environment!\n\nexport class BrowserJsonp {\n  // Construct a <script> element with the specified URL\n  build(url: string): any {\n    const node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n\n  nextRequestID(): string { return `__req${_nextRequestId++}`; }\n\n  requestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n\n  exposeConnection(id: string, connection: any) {\n    const connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n\n  removeConnection(id: string) {\n    const connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n\n  // Attach the <script> element to the DOM\n  send(node: any) { document.body.appendChild(<Node>(node)); }\n\n  // Remove <script> element from the DOM\n  cleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(<Node>(node));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}